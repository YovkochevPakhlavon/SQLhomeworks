-- ==============================================================
--                          Puzzle 1 DDL                         
-- ==============================================================

CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    Name VARCHAR(50),
    Department VARCHAR(50),
    Salary DECIMAL(10,2)
);

INSERT INTO Employees (EmployeeID, Name, Department, Salary)
VALUES
    (1, 'Alice', 'HR', 5000),
    (2, 'Bob', 'IT', 7000),
    (3, 'Charlie', 'Sales', 6000),
    (4, 'David', 'HR', 5500),
    (5, 'Emma', 'IT', 7200);

-- ## **Puzzle 1: The Shifting Employees**
-- A company has a **rotational transfer policy** where employees **switch departments** every 6 months.  
--### **Task:**  
--1. Create a **temporary table** `#EmployeeTransfers` with the same structure as `Employees`.  

CREATE TABLE #EmployeeTransfers (
    EmployeeID INT PRIMARY KEY,
    Name VARCHAR(50),
    Department VARCHAR(50),
    Salary DECIMAL(10,2)    
);

-- 2. **Swap departments** for each employee in a circular manner:  
--    - **HR → IT → Sales → HR**  
--    - Example: Alice (HR) moves to IT, Bob (IT) moves to Sales, Charlie (Sales) moves to HR. 
SELECT EmployeeID,Name,
    CASE 
        WHEN Department = 'HR' THEN 'IT'
        WHEN Department = 'IT' THEN 'Sales'
        WHEN Department = 'Sales' THEN 'HR'
    END AS Departments,
    Salary
FROM Employees

--3. Insert the updated records into `#EmployeeTransfers`. 
INSERT into #EmployeeTransfers 
SELECT *
FROM (
    SELECT EmployeeID,Name,
    CASE 
        WHEN Department = 'HR' THEN 'IT'
        WHEN Department = 'IT' THEN 'Sales'
        WHEN Department = 'Sales' THEN 'HR'
    END AS Departments,
    Salary
FROM Employees
) t;

--4. Retrieve all records from `#EmployeeTransfers`.  
SELECT * FROM #EmployeeTransfers;


